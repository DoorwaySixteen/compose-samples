/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.spotless apply false
    alias libs.plugins.toml.checker
    alias libs.plugins.toml.updater
}

subprojects {
    repositories {
        google()
        mavenCentral()
        if (!Libs.AndroidX.Compose.snapshot.isEmpty()) {
            maven { url Libs.AndroidX.Compose.snapshotUrl }
        }
        if (Libs.Accompanist.version.endsWith('SNAPSHOT')) {
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        }

    }
    apply from: "${project.rootDir}/buildscripts/spotless.gradle"

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (disabled by default)
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-opt-in=kotlin.Experimental'

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: "${project.rootDir}/buildscripts/toml-updater-config.gradle"
