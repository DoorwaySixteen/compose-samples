/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.compose.jetsurvey"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [usesCleartextTraffic:"true"]
        }
        release {
            manifestPlaceholders = [usesCleartextTraffic:"false"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.11'
    }
    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
    lintOptions {
        abortOnError true
    }
}

dependencies {
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.android

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui.ktx

    implementation libs.androidx.lifecycle.viewModelCompose

    implementation libs.androidx.activity.compose

    implementation libs.google.android.material

    implementation libs.androidx.compose.foundation.layout
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.material.iconsExtended
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.runtime.livedata
    debugImplementation libs.androidx.compose.ui.tooling

    implementation libs.accompanist.permissions

    implementation libs.coil.kt.compose

    testImplementation libs.junit
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.ext.junit
    testImplementation libs.androidx.test.ext.truth
    testImplementation libs.robolectric
}
